on:
  push:
    tags:
      - v*

name: Test, build, deploy
jobs:
  master:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Build and start
        run: |
          docker-compose -f docker-compose.test.yml up -d

      - name: Sleep
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'

      - name: Check docker state
        run: docker ps -a

      - name: Grub startup logs
        run: |
          docker logs od-backend-node

      - name: Lint
        run: docker exec od-backend-node npm run lint

      - name: Test
        run: docker exec od-backend-node npm run test

      - name: Codecov unit
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/clover.xml
          flags: unittests
          fail_ci_if_error: true

      - name: Codecov e2e
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-e2e/clover.xml
          flags: e2etests
          fail_ci_if_error: true

      - name: Login in docker registry
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build and push image
        run: |
          docker build --no-cache=true . -t od-backend
          docker tag od-backend opendating/od-backend:latest
          docker push opendating/od-backend:latest
          docker tag od-backend opendating/od-backend:${{ steps.get_version.outputs.VERSION }}
          docker push opendating/od-backend:${{ steps.get_version.outputs.VERSION }}

      - name: Connect to server and update
        uses: appleboy/ssh-action@master
        env:
          FCM_KEY_FILE: ${{ secrets.FCM_KEY_FILE }}
          SERVER_REPO_PATH: ${{ secrets.SERVER_REPO_PATH }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: FCM_KEY_FILE,SERVER_REPO_PATH
          script: |
            whoami
            cd $SERVER_REPO_PATH
            ls -al
            git pull
            echo $FCM_KEY_FILE > fcm.json
            docker volume create --name=od-postgres || echo "exist"
            docker-compose -f docker-compose.prod.yml down
            docker pull opendating/od-backend:latest
            docker-compose -f docker-compose.prod.yml up -d --build
